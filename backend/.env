# Server Configuration
NODE_ENV=development
PORT=5000
LOG_LEVEL=debug

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=restaurant_db
DB_USER=postgres
DB_PASSWORD=301301

DB_HOST=dpg-d0m5e31r0fns73caoqfg-a
DB_PORT=5432
DB_NAME=resturant_f717
DB_USER=resturant_f717_user
DB_PASSWORD=o0zcdxFUE9BagA2XVjkNWumCqRNaTCUd

# Render PostgreSQL - Leave empty for local, Render will auto-fill this
DATABASE_URL=postgresql://resturant_f717_user:o0zcdxFUE9BagA2XVjkNWumCqRNaTCUd@dpg-d0m5e31r0fns73caoqfg-a.oregon-postgres.render.com/resturant_f717

# CORS Origins
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# External APIs (optional)
THEMEALDB_API_KEY=

# Logging

# JWT Configuration (for future authentication)
JWT_SECRET=e0ee81c8f3cc5c7beadcb065f1f24edd
JWT_EXPIRES_IN=7d

# Email Configuration (for future use)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password
EMAIL_FROM=noreply@restaurant.com

# File Upload Configuration (for future use)
MAX_FILE_SIZE=10485760
UPLOAD_DIR=uploads

# API Configuration
API_TIMEOUT=10000
EXTERNAL_API_BASE_URL=https://www.themealdb.com/api/json/v1/1


# Database Configuration
# DATABASE_URL=postgresql://postgres:password@localhost:5432/restaurant_menu
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=restaurant_app
# DB_USER=postgres
# DB_PASSWORD=your_password
# DB_SSL=false

# DB_HOST=dpg-d0m5e31r0fns73caoqfg-a
# DB_PORT=5432
# DB_NAME=resturant_f717
# DB_USER=resturant_f717_user
# DB_PASSWORD=o0zcdxFUE9BagA2XVjkNWumCqRNaTCUd




# Server Configuration
# PORT=3000
# NODE_ENV=development


# JWT Configuration (IMPORTANT: Change these in production!)
# JWT_SECRET=super-secret-key-for-access-tokens-change-this-in-production-make-it-very-long-and-random
# JWT_REFRESH_SECRET=super-secret-key-for-refresh-tokens-change-this-in-production-make-it-different-from-access
# JWT_EXPIRES_IN=15m
# JWT_REFRESH_EXPIRES_IN=7d

# OTP Configuration
# OTP_LENGTH=6
# OTP_EXPIRES_IN=300

# Firebase Configuration (for Google Auth)
# FIREBASE_PROJECT_ID=your-firebase-project-id
# FIREBASE_PRIVATE_KEY=your-private-key
# FIREBASE_CLIENT_EMAIL=your-service-account-email

# Rate Limiting
# RATE_LIMIT_WINDOW=900000
# RATE_LIMIT_MAX_REQUESTS=100

# Security
# BCRYPT_SALT_ROUNDS=12



# # backend/.env.example

# # ===============================================
# # ENVIRONMENT CONFIGURATION
# # Copy this file to .env and fill in your values
# # ===============================================

# # Application Environment
# NODE_ENV=development
# PORT=5000

# # ===============================================
# # DATABASE CONFIGURATION (Render PostgreSQL)
# # ===============================================

# # Option 1: Use DATABASE_URL (Recommended for Render)
# # Render provides this automatically in the format:
# # postgresql://username:password@host:port/database
# DATABASE_URL=postgresql://resturant_f717_user:o0zcdxFUE9BagA2XVjkNWumCqRNaTCUd@dpg-d0m5e31r0fns73caoqfg-a.oregon-postgres.render.com/resturant_f717

# # Option 2: Individual Database Parameters
# # Use these if you don't have a DATABASE_URL
# DB_HOST=dpg-d0m5e31r0fns73caoqfg-a
# DB_PORT=5432
# DB_NAME=resturant_f717
# DB_USER=resturant_f717_user
# DB_PASSWORD=o0zcdxFUE9BagA2XVjkNWumCqRNaTCUd

# # ===============================================
# # FRONTEND/BACKEND URLS
# # ===============================================

# # Production URLs (Update with your actual Render URLs)
# PRODUCTION_BACKEND_URL=https://your-backend-app.onrender.com
# PRODUCTION_FRONTEND_URL=https://your-frontend-app.onrender.com

# # Development CORS Origin
# CORS_ORIGIN=http://localhost:3000

# # ===============================================
# # AUTHENTICATION (Optional - for future use)
# # ===============================================

# # JWT Secret Key (Generate a strong secret)
# JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random

# # JWT Expiration
# JWT_EXPIRES_IN=7d

# # ===============================================
# # SECURITY CONFIGURATION
# # ===============================================

# # Rate Limiting
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# # Session Secret (if using sessions)
# SESSION_SECRET=your-session-secret-key

# # ===============================================
# # FILE UPLOAD CONFIGURATION (Optional)
# # ===============================================

# # Maximum file size for uploads (in bytes)
# MAX_FILE_SIZE=5242880

# # Allowed file types
# ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp

# # Upload directory
# UPLOAD_DIR=uploads

# # ===============================================
# # LOGGING CONFIGURATION
# # ===============================================

# # Log Level (error, warn, info, debug)
# LOG_LEVEL=info

# # Log Directory
# LOG_DIR=logs

# # ===============================================
# # EMAIL CONFIGURATION (Optional - for notifications)
# # ===============================================

# # SMTP Configuration
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# # From Email
# FROM_EMAIL=noreply@yourrestaurant.com
# FROM_NAME=Your Restaurant

# # ===============================================
# # EXTERNAL SERVICES (Optional)
# # ===============================================

# # AWS S3 for file storage (optional)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-s3-bucket

# # Cloudinary for image management (optional)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# # Redis for caching (optional)
# REDIS_URL=redis://localhost:6379

# # ===============================================
# # RENDER-SPECIFIC CONFIGURATION
# # ===============================================

# # These are typically set automatically by Render
# # RENDER=true
# # RENDER_SERVICE_ID=your-service-id
# # RENDER_SERVICE_NAME=your-service-name
# # RENDER_GIT_COMMIT=your-commit-hash

# # ===============================================
# # DEVELOPMENT TOOLS
# # ===============================================

# # Enable debug mode in development
# DEBUG=restaurant-api:*

# # Database connection pooling (for development)
# DB_POOL_MIN=2
# DB_POOL_MAX=10

# # ===============================================
# # FEATURE FLAGS (Optional)
# # ===============================================

# # Enable/disable features
# ENABLE_REGISTRATION=true
# ENABLE_EMAIL_VERIFICATION=false
# ENABLE_CACHING=true
# ENABLE_SEARCH=true
# ENABLE_ANALYTICS=false

# # ===============================================
# # SAMPLE VALUES FOR QUICK SETUP
# # ===============================================

# # For local development, you can use these sample values:
# # NODE_ENV=development
# # PORT=5000
# # DATABASE_URL=postgresql://postgres:password@localhost:5432/restaurant_menu
# # JWT_SECRET=development-jwt-secret-key-not-for-production
# # CORS_ORIGIN=http://localhost:3000

# # ===============================================
# # RENDER POSTGRESQL CONNECTION EXAMPLE
# # ===============================================

# # When you create a PostgreSQL database on Render, you'll get:
# # External Database URL: postgresql://username:password@host:port/database
# # Internal Database URL: postgresql://username:password@internal-host:port/database
# # 
# # Use the External URL for local development
# # Render will automatically use the Internal URL in production

# # Example:
# # DATABASE_URL=postgresql://myuser:mypassword@dpg-abc123def456-a.oregon-postgres.render.com:5432/mydb_1234

# # ===============================================
# # SECURITY NOTES
# # ===============================================

# # IMPORTANT SECURITY REMINDERS:
# # 1. Never commit your .env file to version control
# # 2. Use strong, unique passwords for all services
# # 3. Rotate your secrets regularly
# # 4. Use different secrets for development and production
# # 5. Limit database user permissions to only what's needed
# # 6. Enable SSL/TLS for all external connections
# # 7. Use environment-specific configurations

# # ===============================================
# # TROUBLESHOOTING
# # ===============================================

# # If you're having connection issues:
# # 1. Verify your DATABASE_URL format
# # 2. Check that your IP is whitelisted (if required)
# # 3. Ensure SSL is properly configured
# # 4. Test the connection using: npm run db:test
# # 5. Check Render logs for detailed error messages

# # Common connection string formats:
# # PostgreSQL: postgresql://user:password@host:port/database
# # PostgreSQL with SSL: postgresql://user:password@host:port/database?sslmode=require
# # Local PostgreSQL: postgresql://postgres:password@localhost:5432/restaurant_menu


















# # ==============================================
# # RESTAURANT MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# # ==============================================

# # ==============================================
# # SERVER CONFIGURATION
# # ==============================================
# NODE_ENV=development
# PORT=5000

# # ==============================================
# # DATABASE CONFIGURATION - LOCAL DEVELOPMENT
# # ==============================================
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=restaurant_db
# DB_USER=postgres
# DB_PASSWORD=password
# DB_MAX_CONNECTIONS=10
# DB_IDLE_TIMEOUT=30000
# DB_CONNECTION_TIMEOUT=5000

# # ==============================================
# # DATABASE CONFIGURATION - PRODUCTION (RENDER)
# # Uncomment and use this for production deployment
# # ==============================================
# # DATABASE_URL=postgresql://username:password@hostname:port/database

# # ==============================================
# # JWT CONFIGURATION
# # ==============================================
# JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-32-chars
# JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production-min-32-chars
# JWT_EXPIRATION=24h
# JWT_REFRESH_EXPIRATION=7d

# # ==============================================
# # BCRYPT CONFIGURATION
# # ==============================================
# BCRYPT_SALT_ROUNDS=12

# # ==============================================
# # CORS CONFIGURATION
# # ==============================================
# # Development URLs
# FRONTEND_URL=http://localhost:3000
# ADMIN_URL=http://localhost:3001
# MOBILE_URL=http://localhost:3002

# # Production URLs (uncomment for production)
# # FRONTEND_URL=https://your-frontend-domain.com
# # ADMIN_URL=https://your-admin-domain.com
# # MOBILE_URL=https://your-mobile-app-domain.com

# # ==============================================
# # FILE UPLOAD CONFIGURATION
# # ==============================================
# MAX_FILE_SIZE=5242880
# ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp
# UPLOAD_PATH=uploads

# # ==============================================
# # RATE LIMITING CONFIGURATION
# # ==============================================
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX=100
# RATE_LIMIT_AUTH_MAX=5

# # ==============================================
# # EMAIL CONFIGURATION (Optional - for notifications)
# # ==============================================
# # SMTP_HOST=smtp.gmail.com
# # SMTP_PORT=587
# # SMTP_USER=your-email@gmail.com
# # SMTP_PASS=your-app-password
# # FROM_EMAIL=noreply@yourrestaurant.com

# # ==============================================
# # PAYMENT GATEWAY CONFIGURATION (Optional)
# # ==============================================
# # STRIPE_SECRET_KEY=sk_test_...
# # STRIPE_PUBLISHABLE_KEY=pk_test_...
# # RAZORPAY_KEY_ID=rzp_test_...
# # RAZORPAY_KEY_SECRET=...

# # ==============================================
# # GOOGLE MAPS API (Optional - for location services)
# # ==============================================
# # GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# # ==============================================
# # PUSH NOTIFICATION CONFIGURATION (Optional)
# # ==============================================
# # FCM_SERVER_KEY=your-fcm-server-key
# # APNS_KEY_ID=your-apns-key-id
# # APNS_TEAM_ID=your-apns-team-id

# # ==============================================
# # LOGGING CONFIGURATION
# # ==============================================
# LOG_LEVEL=info
# LOG_FILE=logs/app.log

# # ==============================================
# # REDIS CONFIGURATION (Optional - for caching)
# # ==============================================
# # REDIS_URL=redis://localhost:6379
# # REDIS_PASSWORD=your-redis-password

# # ==============================================
# # APPLICATION CONFIGURATION
# # ==============================================
# APP_NAME=Restaurant Management System
# APP_VERSION=1.0.0
# API_VERSION=v1




